// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
	provider = "prisma-client-js"
}

datasource db {
	provider = "postgresql"
	// NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
	// Further reading:
	// https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
	// https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
	url      = env("DATABASE_URL")
}

// PRIMARY TABLES

enum Role {
	SUPERADMIN
	ADMIN
	SUPERVISOR
	STUDENT
}

model User {
	id            String    @id @default(cuid())
	telegram_id   String?   @unique
	username      String?
	display_name  String
	email         String?   @unique
	emailVerified DateTime?
	image         String?

	role Role @default(STUDENT)

	studentProfileId Int?            @unique
	studentProfile   StudentProfile? @relation(fields: [studentProfileId], references: [id])

	created_at DateTime @default(now())
	updated_at DateTime @updatedAt
}

model StudentProfile {
	id       Int    @id @default(autoincrement())
	fullname String
	phone    String

	practices Practice[]
	User      User?
}

enum PracticeStatus {
	UNVERIFIED
	REJECTED
	APPROVED
}

model Practice {
	id             Int            @id @default(autoincrement())
	status         PracticeStatus @default(UNVERIFIED)
	start_date     DateTime
	end_date       DateTime
	specialization String
	institute      String
	year           String

	typeId Int
	type   PracticeType @relation(fields: [typeId], references: [id])

	student          StudentProfile @relation(fields: [studentProfileId], references: [id])
	studentProfileId Int
}

// INFO TABLES
model Institutes {
	id   Int    @id @default(autoincrement())
	name String
}

model Specialization {
	id   Int    @id @default(autoincrement())
	name String
}

model PracticeType {
	id       Int        @id @default(autoincrement())
	name     String
	Practice Practice[]
}
